<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据结构和算法</title>
      <link href="/2022/09/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><h4 id="1-汉诺塔问题"><a href="#1-汉诺塔问题" class="headerlink" title="1.汉诺塔问题"></a>1.汉诺塔问题</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hanoi</span>(<span class="params">n, a, b, c</span>):</span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        hanoi(n - <span class="number">1</span>, a, c, b)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s-&gt;%s&#x27;</span> % (a, c))</span><br><span class="line">        hanoi(n - <span class="number">1</span>, b, a, c)</span><br><span class="line"></span><br><span class="line">hanoi(<span class="number">2</span>, <span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="查找算法"><a href="#查找算法" class="headerlink" title="查找算法"></a>查找算法</h1><h4 id="1-顺序查找"><a href="#1-顺序查找" class="headerlink" title="1.顺序查找"></a>1.顺序查找</h4><h4 id="2-二分查找"><a href="#2-二分查找" class="headerlink" title="2.二分查找"></a>2.二分查找</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">val = <span class="number">5</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">search</span>(<span class="params">li, val</span>):</span><br><span class="line">    low = <span class="number">0</span></span><br><span class="line">    high = <span class="built_in">len</span>(li) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> low &lt;= high:</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> val == li[mid]:</span><br><span class="line">            <span class="keyword">return</span> mid</span><br><span class="line">        <span class="keyword">elif</span> val &lt; li[mid]:</span><br><span class="line">            high = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            low = mid - <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;no&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(search(li, val))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h1><ol><li><h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="number">1</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">88</span>, <span class="number">22</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">23</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(li) - <span class="number">1</span>):</span><br><span class="line">    exchange = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> (<span class="built_in">range</span>(<span class="built_in">len</span>(li) - i - <span class="number">1</span>)):</span><br><span class="line">        <span class="comment"># 前一项与后一项比大小,大的交换排到后边去</span></span><br><span class="line">        <span class="keyword">if</span> li[j] &gt; li[j + <span class="number">1</span>]:</span><br><span class="line">            li[j], li[j + <span class="number">1</span>] = li[j + <span class="number">1</span>], li[j]</span><br><span class="line">            exchange = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exchange:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></li><li><h4 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="number">1</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">88</span>, <span class="number">22</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">23</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(li) - <span class="number">1</span>):</span><br><span class="line">    mini = i</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i, <span class="built_in">len</span>(li)):</span><br><span class="line">        <span class="comment"># 选择一个最小的记录</span></span><br><span class="line">        <span class="keyword">if</span> li[j] &lt; li[mini]:</span><br><span class="line">            mini = j</span><br><span class="line">    <span class="comment"># 将当前位置于最小的交换</span></span><br><span class="line">    li[i], li[mini] = li[mini], li[i]</span><br><span class="line"><span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></li><li><h4 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="number">1</span>, <span class="number">12</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">88</span>, <span class="number">22</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">23</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(li)):</span><br><span class="line">    tem = li[i]</span><br><span class="line">    j = i - <span class="number">1</span></span><br><span class="line">    <span class="comment"># 取一个数,插入到比他小的数的位置的后边,其他的数的下标向后移动</span></span><br><span class="line">    <span class="keyword">while</span> j &gt; <span class="number">0</span> <span class="keyword">and</span> li[j] &gt; tem:</span><br><span class="line">        li[j + <span class="number">1</span>] = li[j]</span><br><span class="line">        j -= <span class="number">1</span></span><br><span class="line">    li[j + <span class="number">1</span>] = tem</span><br><span class="line"><span class="built_in">print</span>(li)</span><br></pre></td></tr></table></figure></li><li><h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">quick_sort2</span>(<span class="params">li</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(li) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> li</span><br><span class="line">    tmp = li[<span class="number">0</span>]</span><br><span class="line">    left = [v <span class="keyword">for</span> v <span class="keyword">in</span> li[<span class="number">1</span>:] <span class="keyword">if</span> v &lt;= tmp]</span><br><span class="line">    right = [v <span class="keyword">for</span> v <span class="keyword">in</span> li[<span class="number">1</span>:] <span class="keyword">if</span> v &gt; tmp]</span><br><span class="line">    left = quick_sort2(left)</span><br><span class="line">    right = quick_sort2(right)</span><br><span class="line">    <span class="keyword">return</span> left + [tmp] + right</span><br></pre></td></tr></table></figure></li><li><h4 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h4></li><li><p>TODO</p></li></ol><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ol><li><h4 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h4></li><li><h4 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h4></li><li><h4 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h4></li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
